=== Before releasing 1.1.0:

== Test/Unit integration

Intermingling of specs and tests should work the same with the
spec command or the ruby command. Also, when a spec or a test
fails, the output should be complete (including the normal spec-only
output AND test-only output).

As of 2801:

------------------------------------------
Running w/ `ruby`
- runs specs and tests together
------------------------------------------
$ ruby examples/spec_and_test_together.rb 
Loaded suite examples/spec_and_test_together
Started
.
Finished in 0.000321 seconds.

1 tests, 1 assertions, 0 failures, 0 errors
.

Finished in 0.000593 seconds

1 example, 0 failures

------------------------------------------
Running w/ `spec`
- only runs the specs
-- it should also run the tests
------------------------------------------
$ ruby bin/spec examples/spec_and_test_together.rb 
.

Finished in 0.006251 seconds

1 example, 0 failures

------------------------------------------
Running w/ `ruby` with a failing test
- prohibits the spec output
-- it should allow spec output
------------------------------------------
$ ruby examples/spec_and_test_together.rb 
Loaded suite examples/spec_and_test_together
Started
F
Finished in 0.005884 seconds.

  1) Failure:
test_should_run_alongside_spec(NeighborlyTest) [examples/spec_and_test_together.rb:18]:
<5> expected but was
<4>.

1 tests, 1 assertions, 1 failures, 0 errors

------------------------------------------
Running w/ `ruby` with a failing spec
- allows spec and test output
------------------------------------------
$ ruby examples/spec_and_test_together.rb 
Loaded suite examples/spec_and_test_together
Started
.
Finished in 0.000321 seconds.

1 tests, 1 assertions, 0 failures, 0 errors
F

1)
'spec should run alongside test' FAILED
expected: 4,
     got: 5 (using ==)
examples/spec_and_test_together.rb:12:
./examples/../lib/spec.rb:19:in `run'
examples/spec_and_test_together.rb:17:

Finished in 0.0009 seconds

1 example, 1 failure
------------------------------------------

== Story Framework

- should support blockless steps (in StepGroup) as pending
- should continue execution passed pending steps (or switch to --dry-run????)